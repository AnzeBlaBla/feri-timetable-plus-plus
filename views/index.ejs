<%- include("partials/header") %>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-8">
            <div class="card shadow">
                <div class="card-body">
                    <h1 class="card-title text-center mb-4">FERI Timetable++</h1>
                    <p class="text-muted text-center mb-4">Select your programme and year to get started</p>
                    
                    <!-- Loading indicator -->
                    <div id="loading" class="text-center mb-4">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading programmes...</span>
                        </div>
                        <p class="mt-2">Loading programmes...</p>
                    </div>

                    <!-- Programme and Year Selection Form -->
                    <form id="selectionForm" style="display: none;">
                        <div class="row">
                            <div class="col-md-8 mb-3">
                                <label for="programmeSelect" class="form-label">Programme</label>
                                <select class="form-select" id="programmeSelect" required>
                                    <option value="">Select a programme...</option>
                                </select>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">Year</label>
                                <div id="yearSelection" class="d-flex flex-wrap gap-2" style="display: none !important;">
                                    <!-- Year buttons will be inserted here -->
                                </div>
                                <div id="yearPlaceholder" class="text-muted small">
                                    Select a programme first
                                </div>
                            </div>
                        </div>
                        

                        
                        <div class="row">
                            <div class="col-12">
                                <button type="submit" class="btn btn-primary w-100" disabled id="submitBtn">
                                    Select Programme and Year First
                                </button>
                            </div>
                        </div>
                    </form>



                    <!-- Error Display -->
                    <div id="error" class="mt-3" style="display: none;">
                        <div class="alert alert-danger" role="alert">
                            <span id="errorMessage"></span>
                        </div>
                    </div>
                </div>
            </div>
            

        </div>
    </div>
</div>

<style>


.year-button {
    cursor: pointer;
    transition: all 0.2s ease;
    border: 2px solid #dee2e6;
    border-radius: 0.375rem;
    padding: 0.5rem 1rem;
    background: white;
    color: #495057;
    font-weight: 500;
    min-width: 60px;
    text-align: center;
    user-select: none;
}

.year-button:hover {
    border-color: #0d6efd;
    background-color: #f8f9fa;
    color: #0d6efd;
}

.year-button.selected {
    border-color: #0d6efd;
    background-color: #0d6efd;
    color: white;
}
</style>

<script>
let programmes = [];
let selectedProgramme = null;
let selectedYear = null;

// DOM Elements
const loadingDiv = document.getElementById('loading');
const selectionForm = document.getElementById('selectionForm');
const programmeSelect = document.getElementById('programmeSelect');
const yearSelection = document.getElementById('yearSelection');
const yearPlaceholder = document.getElementById('yearPlaceholder');
const submitBtn = document.getElementById('submitBtn');
const errorDiv = document.getElementById('error');
const errorMessage = document.getElementById('errorMessage');

// Load programmes when page loads
document.addEventListener('DOMContentLoaded', async function() {
    try {
        await loadProgrammes();
    } catch (error) {
        showError('Failed to load initial data: ' + error.message);
    }
});

// Load programmes from API
async function loadProgrammes() {
    try {
        const response = await fetch('/api/programmes');
        const data = await response.json();
        
        if (!data.success) {
            throw new Error(data.error || 'Failed to load programmes');
        }
        
        programmes = data.programmes;
        populateProgrammeSelect();
        
        // Hide loading, show form
        loadingDiv.style.display = 'none';
        selectionForm.style.display = 'block';
        
    } catch (error) {
        console.error('Error loading programmes:', error);
        throw error;
    }
}

// Populate programme select dropdown
function populateProgrammeSelect() {
    programmeSelect.innerHTML = '<option value="">Select a programme...</option>';
    
    programmes.forEach(programme => {
        const option = document.createElement('option');
        option.value = programme.id;
        const yearText = programme.year === '1' ? '1 year' : `${programme.year} years`;
        option.textContent = `${programme.name} (${yearText})`;
        option.dataset.year = programme.year;
        option.dataset.name = programme.name;
        programmeSelect.appendChild(option);
    });
}

// Handle programme selection
programmeSelect.addEventListener('change', function() {
    const selectedOption = this.options[this.selectedIndex];
    
    if (selectedOption.value) {
        selectedProgramme = {
            id: selectedOption.value,
            name: selectedOption.dataset.name,
            year: selectedOption.dataset.year
        };
        
        // Populate years from 1 to programme total years
        populateYearButtons();
        
        // Reset year selection when programme changes
        selectedYear = null;
        
    } else {
        selectedProgramme = null;
        selectedYear = null;
        yearSelection.innerHTML = '';
        yearSelection.style.display = 'none';
        yearPlaceholder.style.display = 'block';
    }
    
    updateSubmitButton();
});

// Populate year buttons based on selected programme
function populateYearButtons() {
    if (!selectedProgramme) return;
    
    // The year field represents total years in the programme
    const totalYears = parseInt(selectedProgramme.year);
    
    // Clear existing buttons
    yearSelection.innerHTML = '';
    
    // Create buttons for each year from 1 to totalYears
    for (let year = 1; year <= totalYears; year++) {
        const button = document.createElement('div');
        button.className = 'year-button';
        button.textContent = year.toString();
        button.dataset.year = year.toString();
        
        // Add click handler
        button.addEventListener('click', function() {
            selectYear(year.toString());
        });
        
        yearSelection.appendChild(button);
    }
    
    // Show year selection and hide placeholder
    yearSelection.style.display = 'flex';
    yearPlaceholder.style.display = 'none';
}

// Handle year selection
function selectYear(year) {
    // Update selected year
    selectedYear = year;
    
    // Update button visual states
    document.querySelectorAll('.year-button').forEach(button => {
        button.classList.remove('selected');
        if (button.dataset.year === year) {
            button.classList.add('selected');
        }
    });
    
    updateSubmitButton();
}

// Update submit button state
function updateSubmitButton() {
    if (selectedProgramme && selectedYear) {
        submitBtn.disabled = false;
        submitBtn.textContent = 'Show Timetable';
    } else {
        submitBtn.disabled = true;
        submitBtn.textContent = 'Select Programme and Year First';
    }
}

// Handle form submission
selectionForm.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    if (!selectedProgramme || !selectedYear) {
        showError('Please select programme and year');
        return;
    }
    
    try {
        // Create URL parameters for the timetable route - always use all branches
        const params = new URLSearchParams();
        params.set('programme', selectedProgramme.id);
        params.set('year', selectedYear);
        params.set('branches', 'all');
        
        // Redirect to timetable view
        const timetableUrl = `/timetable?${params.toString()}`;
        console.log('Redirecting to:', timetableUrl);
        window.location.href = timetableUrl;
        
    } catch (error) {
        showError('Error: ' + error.message);
    }
});

// Show error message
function showError(message) {
    errorMessage.textContent = message;
    errorDiv.style.display = 'block';
    
    // Auto-hide after 5 seconds
    setTimeout(() => {
        errorDiv.style.display = 'none';
    }, 5000);
}


</script>

<%- include("partials/footer") %>